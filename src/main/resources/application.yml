spring:
  application:
    name: support-ticket-system
  # Common database configuration
  datasource:
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
  # Jackson configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: UTC

# Server configuration
server:
  port: 8080
  servlet:
    context-path: /api
  error:
    include-message: always
    include-binding-errors: always

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:default_dev_secret_key_should_be_changed_in_production_environment}
  expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds
  issuer: support-ticket-system

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: Authorization,Content-Type,X-Requested-With,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers
  exposed-headers: Authorization
  allow-credentials: true
  max-age: 3600

# AWS Configuration
aws:
  region: ${AWS_REGION:us-east-1}
  access-key: ${AWS_ACCESS_KEY:}
  secret-key: ${AWS_SECRET_KEY:}
  s3:
    bucket-name: ${AWS_S3_BUCKET_NAME:support-ticket-system-files}
  ses:
    from-email: ${AWS_SES_FROM_EMAIL:no-reply@example.com}
  ssm:
    parameter-path: ${AWS_SSM_PARAMETER_PATH:/support-ticket-system/}

# WebSocket Configuration
websocket:
  allowed-origins: ${WEBSOCKET_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173}
  endpoint: ${WEBSOCKET_ENDPOINT:/ws}
  topic-prefix: ${WEBSOCKET_TOPIC_PREFIX:/topic}
  queue-prefix: ${WEBSOCKET_QUEUE_PREFIX:/queue}
  app-prefix: ${WEBSOCKET_APP_PREFIX:/app}

# Logging Configuration
logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.hibernate: INFO
    com.planb.supportticket: DEBUG
    org.springframework.messaging: INFO
    org.springframework.web.socket: INFO

---
# Development profile
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/support_ticket_db
    username: postgres
    password: postgres
  jpa:
    show-sql: true

# Development-specific logging
logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    com.planb.supportticket: DEBUG

---
# Production profile
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate # More conservative setting for production

# Production-specific server settings
server:
  port: ${PORT:8080}

# Production-specific logging
logging:
  level:
    root: WARN
    org.springframework.web: WARN
    org.hibernate: ERROR
    com.planb.supportticket: INFO
  file:
    name: /var/log/support-ticket-system.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 7

# Production-specific CORS settings
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS}
